{% assign show_shipping_bar = true %}
{% assign free_shipping_icon = "ðŸšš" %}
<script type="text/javascript">
  const CartJSON = {{ cart | json }};

  const cartDrawer = () => {
    return {
      open: false,
      cart: null, 
      items: [],
      discountCode: null,
      validDiscountCode: "",
      freeShippingFrom: 5000,
      checkoutCart: {
        total: 0, 
        subtotal: 0,
        discount: 0
      },
      codeStatus: null,
      usedKeyboard: false,
      choiceOverlay: false,
      freeProducts: [],
      selectedFreeVariants: [],
      maxFreeProducts: -1,
      initChoiceOverlay(args) {
        const {maxFreeProducts, freeProducts} = args;
        let currentFreeProductsCount = this.items.filter(item => item.price == 0)
        let freeProductFound = false

        if (currentFreeProductsCount > maxFreeProducts) {
          let i = 1;
          for (const item of this.items) {
            if (item.price == 0) {
              CartJS.removeItem(i)
            }
            i++;
          }
        } else {
          for (const freeProduct of freeProducts) {
            const f = this.items.find(item => item.variant_id == freeProduct.variants[0].variantId)
            if (f) {
              freeProductFound = true
            }
          }
        }

        this.maxFreeProducts = maxFreeProducts
        this.freeProducts = freeProducts
        for (const product of this.freeProducts) {
          product.product_worth = "";
          product.available = true;
        }

        if (!freeProductFound) {
          this.openChoiceOverlay();
        }
      },
      openChoiceOverlay() {
        this.choiceOverlay = true;
        this.loadImages();
      },
      toggleFreeProduct(product) {
        if (!product.available) {
          return;
        }
        if (this.maxFreeProducts == 1) {
          let i = 1;
          let alreadyInCart = false;
          for (const item of this.items) {
            if (item.price == 0 && item.variant_id != product.variants[0].variantId) {
              CartJS.removeItem(i)
            }
            if (item.variant_id == product.variants[0].variantId) {
              alreadyInCart = true;
            }
            i++
          }
          if (!alreadyInCart) {
            this.selectedFreeVariants = [];
            this.selectedFreeVariants.push(product.variants[0].variantId);
            CartJS.addItem(product.variants[0].variantId)
          }
        }
        this.choiceOverlay = false;
      },
      isFreeProductSelected(product) {
        return this.selectedFreeVariants.indexOf(product.variants[0].variantId) > -1
      },
      loadImages() {
        for (const product of this.freeProducts) {
          fetch(`/search?view=id&type=product&q=${encodeURI('id:' + product.productId)}`)
            .then(response => response.json())
            .then(response => {
              if (response.products && response.products.length > 0) {
                product.image = response.products[0].featured_image;
                product.product_worth = response.products[0].product_worth;
                product.available = !!response.products[0].available;
              }
            }).catch(err => {
            })
        }
      },
      checkDiscountCode() {
        if (this.discountCode && cart) {
          let code = this.discountCode;
          code = code.trim().toLowerCase();
          let shop = Shopify.shop;
          const data = { cart: JSON.parse(JSON.stringify(this.cart)), code: code, shop: shop };
          //fetch('https://checkout-api.rosental.de/checkout', {
          fetch('https://rosental-checkout-api.digitalsprung.de/checkout', {
            method: 'POST', // or 'PUT'
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => {
            this.codeStatus = data.status;
            if (data.checkoutCart) {
              this.checkoutCart = data.checkoutCart;
            } else {
              this.checkoutCart.total = this.cart.total_price;
              this.checkoutCart.subtotal = this.cart.total_price;
              this.checkoutCart.discount = 0;
            }
            if (data.status == 'valid') {
              this.validDiscountCode = code.trim().toUpperCase()
              setCookie("discount_code", code.trim().toUpperCase());

              setTimeout(function () {
                var cartItems = CartJS.cart.items;
                var items = [];
                for (var i = 0; i < cartItems.length; i++) {
                  items.push({
                    variant: cartItems[i].variant_id,
                    price: cartItems[i].price,
                    quantity: cartItems[i].quantity
                  })
                }
                EasyCart.callHook('after_discount_code_check', [code.trim(), items]);
              }, 500);
            } else {
              //this.validDiscountCode = null;
            }
            //console.log('Success:', data);
          })
        }
      },
      freeShippingCriteriaMet() {
        return this.checkoutCart && this.checkoutCart.total >= this.getFreeShippingFrom()
      },
      getFreeShippingFrom() {
        if (this.checkoutCart && this.checkoutCart.free_shipping_from >= 0) {
          return this.checkoutCart.free_shipping_from
        }
        return this.freeShippingFrom
      },
      width() {
        if (this.checkoutCart.total < this.getFreeShippingFrom()) {
          return Math.abs(this.checkoutCart.total / this.getFreeShippingFrom() * 100);
        }
        return 100
      },
      init(cart) {
        this.cart = cart;
        this.checkoutCart.total  = this.cart.total_price
        var discountCodeCookie = getCookie('discount_code');
        if (discountCodeCookie) {
          this.discountCode = discountCodeCookie;
        }
        this.items = cart.items;
        this.$watch('open', value => {
          value && this.$refs.closeButton.focus()
          if (value && this.discountCode && this.cart.item_count > 0) {
            this.checkDiscountCode();
          }
          this.toggleOverlay()
        })
        this.toggleOverlay()
      },
      image(item) {
        let image = item.featured_image.url
        image = image.replace(".png", "_100x.png")
        image = image.replace(".jpg", "_100x.jpg")
        image = image.replace(".jpeg", "_100x.jpeg")
        return image
      },
      updateCart(cart) {
        this.selectedFreeVariants = []
        this.cart = cart
        this.items = cart.items
        if (!this.validDiscountCode) {
          this.checkoutCart.total = cart.total_price
        }
        this.checkDiscountCode()
      },
      shippingDiff(text, format) {
        var total = (this.checkoutCart !== undefined && this.checkoutCart.total > 0) ? this.checkoutCart.total : 0;
        const diff = this.getFreeShippingFrom() - this.checkoutCart.total;
        const t = text.replace("[money]", Shopify.formatMoney(diff, format))
        return t
      },
      discountApplied(text, format) {
        if (this.checkoutCart) {
          const t = text.replace("[money]", Shopify.formatMoney(this.checkoutCart.discount, format))
          return t
        }
        return ""
      },
      plus(index, item) {
        CartJS.addItem(item, 1);
      },
      minus(index, quantity) {
        CartJS.updateItem(index + 1, quantity);
      },
      update(index, quantity) {
        const newQty = quantity > 99 ? 99 : quantity;
        CartJS.updateItem(index + 1, newQty);
      },
      toggleOverlay() {
        document.body.classList[this.open ? 'add' : 'remove']('h-screen', 'overflow-hidden')
      }
    }
  }
</script>
<section
  x-data="cartDrawer()"
  x-cloak
  @cart-update.window="updateCart($event.detail.cart);"
  @open-cart.window="open = $event.detail.open"
  @keydown.window.tab="usedKeyboard = true"
  @keydown.escape="open = false"
  x-init="init(CartJSON)"
  class="w-0 cart-drawer"
  >

  <div class="w-100vw h-100vh fixed inset-0 z-1000"
    x-show.transition.opacity.duration.500="choiceOverlay"
    @easycart-choice.window="initChoiceOverlay($event.detail)">
    <div class="absolute inset-0 w-full h-full opacity-75 bg-black cursor-pointer"
      @click="choiceOverlay = false;"></div> 
      <div class="w-100vw h-100vh md:w-90vw md:max-w-xl md:h-auto min-h-70vh bg-white absolute inset-0 md:top-1/2 md:left-1/2 md:transform md:-translate-x-1/2 md:-translate-y-1/2 flex overflow-hidden z-1010"
      x-show.transition.opacity.duration.500="choiceOverlay">
      <div class="overflow-auto pb-10 w-full">
        <div class="max-w-md mx-auto py-10">
          <div class="w-full text-center text-2xl">
            <h2 x-show="maxFreeProducts == 1">
              WÃ¤hle dein Geschenk
            </h2>
            <h2 x-show="maxFreeProducts > 1">
              WÃ¤hle <span x-html="maxFreeProducts"></span> Geschenke
            </h2>
          </div>
          <div class="flex flex-col mt-5"> 
            <template x-for="product in freeProducts">
              <div class="flex border-b border-solid border-alabaster px-5 py-5 justify-center items-center align-center space-x-5 cursor-pointer"
                :class="{'bg-green': isFreeProductSelected(product), 'opacity-50': !product.available}"
                @click="toggleFreeProduct(product)">
                <div class="w-1/3">
                  <div class="mx-auto max-w-24">
                    <div class="aspect-w-1 aspect-h-1 relative flex justify-center items-center align-center">
                      <template x-if="product.image">
                        <img :src="product.image" class="absolute inset-0 w-full h-full object-contain object-center" />
                      </template>
                    </div>
                  </div>
                </div>
                <div class="w-2/3">
                  <div class="text-lg md:text-base"><strong x-html="product.title"></strong></div>
                  <div x-show="product.available && product.product_worth" x-html="product.product_worth" class="font-medium text-gray"></div>
                  <div x-show="!product.available" class="font-medium text-gray">Ausverkauft</div>
                  <div class="px-5 py-1 mt-1 text-center inline-block text-xs" style="color: #8b86d9; border: 1px solid #8b86d9;"
                    x-show="product.available"
                    >
                    <span x-show="isFreeProductSelected(product)">AusgewÃ¤hlt</span> 
                    <span x-show="!isFreeProductSelected(product)">AuswÃ¤hlen</span>
                  </div>
                </div>
              </div>
            </template>
          </div>
        </div>
      </div>
      <button
        @click="choiceOverlay = false"
        class="absolute top-0 right-0 mr-5 mt-3 z-1010">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
      </button>
    </div>
  </div>

  <div
    x-show.transition.opacity.duration.300="open"
    @click="open = false"
    class="fixed inset-0 bg-black bg-opacity-30 z-200">
  </div>
  <div
    class="fixed transition duration-300 right-0 top-0 transform w-11/12 sm:w-2/3 max-w-mobile-menu h-full bg-white overflow-y-scroll z-210 flex flex-col justify-between"
    :class="{'translate-x-full': !open}"
  >
    {% comment %}
      Cart Header
    {% endcomment %}
    <div class="sticky top-0 w-full z-50 bg-white">
      <div>
        <div class="block bg-white ml-5 mt-6">
          <h3 class="text-left text-lg font-normal">
            {{'cart.title' | t }}
          </h3>
        </div>

        <button
          @click="open = false"
          x-ref="closeButton"
          :class="{'focus:outline-none': !usedKeyboard}"
          class="absolute top-0 right-0 mr-5 mt-5 z-50">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
        </button>

      </div>
    </div>

    <div class="pb-8 h-full">
      {% comment %}
        Empty State
      {% endcomment %}
      <div
        class="block p-4"
        x-show="cart.item_count == 0"
      >
        <span class="block text-center mb-4 md:mt-4">
          {{'cart.empty' | t }}
        </span>
      </div>
      {% comment %}
        Cart Items
      {% endcomment %}
      <div class="block bg-white" x-show="cart.item_count > 0">

        {% if show_shipping_bar %}
        <div class="border-b border-light-gray border-solid pb-5 pt-3 w-full px-5 text-sm">
          <div class="text-center mb-2" x-show="freeShippingCriteriaMet()">
            <span class="mr-2">{{ free_shipping_iconÂ }}</span>{{ 'cart.free_shipping' | t }}
          </div>
          <div class="text-center mb-2" x-show="!freeShippingCriteriaMet()">
            <span class="mr-2">{{ free_shipping_iconÂ }}</span><span x-text="shippingDiff('{{ 'cart.free_shipping_at' | t }}', '{{ shop.money_format }}')"></span>
          </div>
          <div class="bg-light-gray h-3 w-full rounded-md">
            <div class="bg-green h-3 w-0 rounded-md" :style="`width: ${width()}%`" >
            </div>
          </div>
        </div>
        {% endif %}

        <template x-for="(cartItem, index) in items" :key="cartItem.id">
          <div class="flex px-5 py-2 flex justify-center items-center align-center border-b border-solid border-light-gray">
            <div class="w-1/4 pr-3">
              <div class="min-w-20 min-h-20">
                <img class="w-20 object-contain mx-auto"
                  src="https://cdn.shopify.com/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_100x.gif"
                  x-bind:src="image(cartItem)" />
              </div>
            </div>
            <div class="w-3/4 relative text-left pl-4">
              <div>
                <h2
                  class="font-normal text-sm mb-1"
                  x-html="cartItem.title"
                ></h2>
                <template x-if="cartItem.price == 0 && freeProducts.length > 1">
                  <div class="mt-1">
                    <div class="underline text-xs cursor-pointer" @click="openChoiceOverlay()"
                    >Geschenk Ã¤ndern</div>
                  </div>
                </template>
                {% comment %}
                <template x-for="option in cartItem.options_with_values">
                  <div class="mt-1 text-xs leading-none text-gray" x-show="option.value != 'Default Title'">
                    <span x-text="option.name"></span>:
                    <span x-text="option.value"></span>
                  </div>
                </template>
                {% endcomment %}
              </div>

              {% comment %}
                Qty Input
              {% endcomment %}
              <div class="grid grid-cols-2 w-full justify-center align-center items-center mt-3">
                <div>
                  <div class="
                      flex w-full max-w-20
                      border-gray border-solid border
                      text-center
                    "
                    x-show="cartItem.original_price"
                  >
                    <button
                      type="button"
                      class="w-1/3 px-2 cursor-pointer"
                      @click="minus(index, cartItem.quantity - 1)"
                    >
                      <svg class="w-3 h-3 text-gray mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path></svg>
                    
                    </button>
                    <input
                      type="text"
                      class="
                        w-1/3 
                        text-center mx-auto
                        text-black px-0 py-0
                        h-6
                        text-xs
                      "
                      @keyup="update(index, event.target.value)"
                      style="border-top: 0; border-bottom: 0;"
                      x-bind:value="cartItem.quantity"
                    />
                    </span>
                    <button
                      type="button"
                      class="w-1/3 px-2"
                      @click="plus(index, cartItem.id)"
                    >
                      <svg class="w-4 h-4 -mt-0.5 -ml-0.5 text-gray mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                    </button>
                  </div> 
                </div>
                <div class="text-right">
                  <span x-html="Shopify.formatMoney(cartItem.original_price, '{{ shop.money_format }}')" class="float-right"></span>
                </div>
              </div>
            </div>
          </div>
        </template>
        
      </div>
    </div>


    {% comment %}
      Cart Footer
    {% endcomment %}
    <div
      class="sticky bottom-0 w-full pt-2 pb-2 px-5 bg-white border-t border-solid border-light-gray"
      x-cloak
      x-show="cart.item_count > 0"
    >
      <div x-show="cart.item_count > 0">
        <div class="bg-white">

          <div class="py-2">
            <div class="mb-1">
              {{ 'cart.discountcode_title' | t }}
            </div>
            <form method="post" novalidate @submit.prevent="checkDiscountCode"  class="flex justify-center align-items items-center w-full">
              <div class="w-2/3">
                <input type="text" placeholder="{{ 'cart.your_code' | t }}"
                  class="py-1 h-10 w-full" x-model="discountCode"
                  x-on:keydown.cmd.enter="checkDiscountCode()"
                  :class="{'border border-red-500 focus:text-red-500 focus:border-red-500 border-solid': codeStatus == 'invalid'}"
                  
                  />
              </div>
              <button type="submit" class="bg-black text-white px-2 pt-2.5 pb-3 uppercase h-10 w-1/3 justify-center items-center align-center text-center text-xs cursor-pointer">
                  {{ 'cart.use_discountcode' | t }}
              </button>
            </form>

            <div x-show="codeStatus == 'valid' && checkoutCart.discount > 0" class="px-2 py-2 bg-green rounded-md flex mt-3">
              <svg class="cart-icon ml-2 mr-3" fill="#499949" width="24px" height="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18"><path d="M17.78 3.09C17.45 2.443 16.778 2 16 2h-5.165c-.535 0-1.046.214-1.422.593l-6.82 6.89c0 .002 0 .003-.002.003-.245.253-.413.554-.5.874L.738 8.055c-.56-.953-.24-2.178.712-2.737L9.823.425C10.284.155 10.834.08 11.35.22l4.99 1.337c.755.203 1.293.814 1.44 1.533z" fill-opacity=".55"></path><path d="M10.835 2H16c1.105 0 2 .895 2 2v5.172c0 .53-.21 1.04-.586 1.414l-6.818 6.818c-.777.778-2.036.782-2.82.01l-5.166-5.1c-.786-.775-.794-2.04-.02-2.828.002 0 .003 0 .003-.002l6.82-6.89C9.79 2.214 10.3 2 10.835 2zM13.5 8c.828 0 1.5-.672 1.5-1.5S14.328 5 13.5 5 12 5.672 12 6.5 12.672 8 13.5 8z"></path></svg>
              <span
                x-html="discountApplied('{{ 'cart.discount_applied' | t }}', '{{ shop.money_format }}')"
                class="w-full">
              </span>
            </div>

            <div x-show="codeStatus == 'valid' && checkoutCart.free_shipping" class="px-2 py-2 bg-green rounded-md flex mt-3">
              <svg class="cart-icon ml-2 mr-3" fill="#499949" width="24px" height="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18"><path d="M17.78 3.09C17.45 2.443 16.778 2 16 2h-5.165c-.535 0-1.046.214-1.422.593l-6.82 6.89c0 .002 0 .003-.002.003-.245.253-.413.554-.5.874L.738 8.055c-.56-.953-.24-2.178.712-2.737L9.823.425C10.284.155 10.834.08 11.35.22l4.99 1.337c.755.203 1.293.814 1.44 1.533z" fill-opacity=".55"></path><path d="M10.835 2H16c1.105 0 2 .895 2 2v5.172c0 .53-.21 1.04-.586 1.414l-6.818 6.818c-.777.778-2.036.782-2.82.01l-5.166-5.1c-.786-.775-.794-2.04-.02-2.828.002 0 .003 0 .003-.002l6.82-6.89C9.79 2.214 10.3 2 10.835 2zM13.5 8c.828 0 1.5-.672 1.5-1.5S14.328 5 13.5 5 12 5.672 12 6.5 12.672 8 13.5 8z"></path></svg>
              <span class="w-full">{{ 'cart.discount_free_shipping' | t }}</span>
            </div>
          </div>

          <div class="
              text-base
              flex justify-between items-center
              pt-2
            "
          >
            <span>{{ 'cart.subtotal' | t }}</span>
            <div x-show="codeStatus != 'valid' || checkoutCart.discount == 0">
              <span
                x-html="Shopify.formatMoney(cart.total_price, '{{ shop.money_format }}')">
              </span>
            </div>

            <div x-show="codeStatus == 'valid' && checkoutCart && checkoutCart.discount > 0">
              <span
                x-html="Shopify.formatMoney((checkoutCart ? checkoutCart.subtotal : 0), '{{ shop.money_format }}')"
                class="mr-3 line-through text-gray">
              </span>
              <span
                x-html="Shopify.formatMoney((checkoutCart ? checkoutCart.total : 0), '{{ shop.money_format }}')">
              </span>
            </div>
          </div>


          <form action="/cart" method="post" novalidate
              class="
                mt-2 mb-3
              ">
            <input type="hidden" name="discount" x-bind:value="validDiscountCode" />
            <button class="
                w-full 
                text-lg
                bg-black text-white 
                uppercase
                py-3 sm:py-3
              "
              type="submit"
              name="checkout"
            >
              {{ 'cart.checkout' | t }}
            </button>
          </form>
        </div>
      </div>

      {% comment %}
        Zahlungs-Icons
      {% endcomment %}
      <div class="block bg-white">
        {% render 'layout-cart-payment-icons', cart: true %}
      </div>
    </div>
  </div>
</section>